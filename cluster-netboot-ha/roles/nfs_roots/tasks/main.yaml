---
- name: Download Raspberry Pi OS
  get_url:
    url: "{{ raspios_url }}"
    dest: "{{ work_dir }}/raspios.zip"
    mode: "0644"
    force: no  # don't re-download if present

- name: Unzip OS image
  unarchive:
    src: "{{ work_dir }}/raspios.zip"
    dest: "{{ work_dir }}"
    remote_src: yes

- name: Find image
  find:
    paths: "{{ work_dir }}"
    patterns: "*.img"
  register: img_find

- name: Set image path
  set_fact:
    img_path: "{{ (img_find.files | sort(attribute='mtime'))[-1].path }}"

- name: Get partition table
  command: "fdisk -l {{ img_path }}"
  register: fdisk_out

- name: Parse offsets (fallback to typical values)
  set_fact:
    sector_size: 512
    boot_start: >-
      {{ (fdisk_out.stdout
          | regex_search(
              '^\s*' ~ img_path | regex_escape ~ '.*\n\s*'
              ~ img_path | regex_escape ~ 'p*\s*\d+\s+(\d+)\s+\d+\s+\d+\s+.*(W95|EFI)',
              multiline=True
            )
          | default(['8192'])
          | first
          | int) }}
    root_start: >-
      {{ (fdisk_out.stdout
          | regex_search('Linux\s+filesystem\s+\d+\s+(\d+)', multiline=True))
          | default(['532480'])
          | first
          | int }}

- name: Create loop mount points
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ work_dir }}/mnt_boot"
    - "{{ work_dir }}/mnt_root"

- name: Mount boot partition
  mount:
    path: "{{ work_dir }}/mnt_boot"
    src: "{{ img_path }}"
    fstype: vfat
    opts: "loop,offset={{ (boot_start | int) * (sector_size | int) }}"
    state: mounted

- name: Mount root partition
  mount:
    path: "{{ work_dir }}/mnt_root"
    src: "{{ img_path }}"
    fstype: ext4
    opts: "loop,offset={{ (root_start | int) * (sector_size | int) }}"
    state: mounted

- name: Ensure per-node base dir on Synology
  file:
    path: "{{ per_node_root_base }}"
    state: directory
    mode: "0755"

- name: Build per-node roots and TFTP subdirs
  block:
    - name: Create root dir
      file:
        path: "{{ per_node_root_base }}/{{ hostvars[node].hostname }}"
        state: directory

    - name: Rsync base rootfs
      synchronize:
        src: "{{ work_dir }}/mnt_root/"
        dest: "{{ per_node_root_base }}/{{ hostvars[node].hostname }}/"
        recursive: yes

    - name: Ensure /boot dir exists in root (for completeness)
      file:
        path: "{{ per_node_root_base }}/{{ hostvars[node].hostname }}/boot"
        state: directory

    - name: TFTP subdir for node
      file:
        path: "{{ tftp_root }}/{{ hostvars[node].mac | lower | replace(':','-') }}"
        state: directory

    - name: Copy boot files into node TFTP dir
      synchronize:
        src: "{{ work_dir }}/firmware-master/boot/"
        dest: "{{ tftp_root }}/{{ hostvars[node].mac | lower | replace(':','-') }}/"
        recursive: yes

    - name: Set hostname
      copy:
        dest: "{{ per_node_root_base }}/{{ hostvars[node].hostname }}/etc/hostname"
        content: "{{ hostvars[node].hostname }}\n"

    - name: Update /etc/hosts
      lineinfile:
        path: "{{ per_node_root_base }}/{{ hostvars[node].hostname }}/etc/hosts"
        regexp: '^127\.0\.1\.1\s+'
        line: "127.0.1.1\t{{ hostvars[node].hostname }}"

    - name: RAM tmpfs for /var/log and /tmp
      blockinfile:
        path: "{{ per_node_root_base }}/{{ hostvars[node].hostname }}/etc/fstab"
        block: |
          tmpfs /var/log tmpfs defaults,noatime,nosuid,size={{ tmpfs_var_log_size }} 0 0
          tmpfs /tmp     tmpfs defaults,noatime,nosuid,size={{ tmpfs_tmp_size }}     0 0

    - name: Write per-node cmdline.txt (NFS root)
      template:
        src: cmdline.txt.j2
        dest: "{{ tftp_root }}/{{ hostvars[node].mac | lower | replace(':','-') }}/cmdline.txt"
      vars:
        node_hostname: "{{ hostvars[node].hostname }}"
  loop: "{{ groups['pi_servers'] + groups['pi_agents'] }}"
  loop_control:
    loop_var: node
    label: "{{ hostvars[node].hostname }}"

- name: Unmount loop mounts
  mount:
    path: "{{ item }}"
    state: unmounted
  loop:
    - "{{ work_dir }}/mnt_boot"
    - "{{ work_dir }}/mnt_root"
